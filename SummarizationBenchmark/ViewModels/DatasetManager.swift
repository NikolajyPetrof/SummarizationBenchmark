//
//  DatasetManager.swift
//  SummarizationBenchmark
//
//  Created by Nikolay Petrov on 27.06.2025.
//

import Foundation
import SwiftUI

/// –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞—Ç–∞—Å–µ—Ç–∞–º–∏
@MainActor
class DatasetManager: ObservableObject {
    /// –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–∞—Ç–∞—Å–µ—Ç—ã
    @Published var datasets: [Dataset] = []
    
    /// –í—ã–±—Ä–∞–Ω–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç
    @Published var selectedDataset: Dataset?
    
    /// –°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
    @Published var isLoading = false
    
    /// –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    @Published var errorMessage: String?
    
    /// –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –¥–∞—Ç–∞—Å–µ—Ç–∞–º–∏
    private let datasetsDirectory: URL
    
    /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –¥–∞—Ç–∞—Å–µ—Ç–æ–≤
    init() {
        // –ü–æ–ª—É—á–∞–µ–º URL –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        let documentsDirectory = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask).first!
        
        // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–∞—Ç–∞—Å–µ—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        self.datasetsDirectory = documentsDirectory.appendingPathComponent("Datasets")
        
        do {
            try FileManager.default.createDirectory(at: datasetsDirectory, withIntermediateDirectories: true)
            loadDatasets()
        } catch {
            errorMessage = "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–∞—Ç–∞—Å–µ—Ç–æ–≤: \(error.localizedDescription)"
        }
    }
    
    /// –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞—Ç–∞—Å–µ—Ç–æ–≤
    func loadDatasets() {
        isLoading = true
        defer { isLoading = false }
        
        do {
            // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–∞—Ç–∞—Å–µ—Ç–æ–≤
            let fileURLs = try FileManager.default.contentsOfDirectory(at: datasetsDirectory, includingPropertiesForKeys: nil)
            
            // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ JSON —Ñ–∞–π–ª—ã
            let jsonFiles = fileURLs.filter { $0.pathExtension == "json" }
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞–∂–¥—ã–π –¥–∞—Ç–∞—Å–µ—Ç
            var loadedDatasets: [Dataset] = []
            
            for fileURL in jsonFiles {
                do {
                    let data = try Data(contentsOf: fileURL)
                    let decoder = JSONDecoder()
                    let dataset = try decoder.decode(Dataset.self, from: data)
                    loadedDatasets.append(dataset)
                } catch {
                    print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞—Ç–∞—Å–µ—Ç–∞ \(fileURL.lastPathComponent): \(error.localizedDescription)")
                }
            }
        
            // –ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞—Ç–∞—Å–µ—Ç–æ–≤, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫
            if loadedDatasets.isEmpty {
                print("üìù –î–∞—Ç–∞—Å–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
                datasets = []
            } else {
                datasets = loadedDatasets
                // –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –¥–∞—Ç–∞—Å–µ—Ç, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
                if let firstDataset = datasets.first {
                    selectedDataset = firstDataset
                }
            }
        } catch {
            errorMessage = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞—Ç–∞—Å–µ—Ç–æ–≤: \(error.localizedDescription)"
        }
    }
    
    /// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞—Ç–∞—Å–µ—Ç–∞
    func saveDataset(_ dataset: Dataset) {
        do {
            let encoder = JSONEncoder()
            encoder.outputFormatting = .prettyPrinted
            let data = try encoder.encode(dataset)
            
            let fileURL = datasetsDirectory.appendingPathComponent("\(dataset.name).json")
            try data.write(to: fileURL)
        } catch {
            errorMessage = "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞—Ç–∞—Å–µ—Ç–∞: \(error.localizedDescription)"
        }
    }
    
    /// –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞—Ç–∞—Å–µ—Ç–∞
    func deleteDataset(_ dataset: Dataset) {
        do {
            let fileURL = datasetsDirectory.appendingPathComponent("\(dataset.name).json")
            try FileManager.default.removeItem(at: fileURL)
            
            // –£–¥–∞–ª—è–µ–º –¥–∞—Ç–∞—Å–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞
            datasets.removeAll { $0.name == dataset.name }
            
            // –ï—Å–ª–∏ —É–¥–∞–ª–µ–Ω–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç –±—ã–ª –≤—ã–±—Ä–∞–Ω, –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –∏–∑ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è
            if selectedDataset?.name == dataset.name {
                selectedDataset = datasets.first
            }
        } catch {
            errorMessage = "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–∞—Ç–∞—Å–µ—Ç–∞: \(error.localizedDescription)"
        }
    }
    
}
